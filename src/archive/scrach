// Almost there 12 :02 / Thuirs 28
-------------------------------------


import React, { FC, memo, useEffect, useState } from "react";
import client from "../../../tina/__generated__/client";
import { About as AboutInterface, AboutItem } from "../../data/dataDef";
import classNames from "classnames";
import Image from "next/image";
import {
    AcademicCapIcon,
    BuildingOffice2Icon,
    MapIcon,
    SparklesIcon,
} from "@heroicons/react/24/outline";
// Assuming you have a SectionId and Section components properly defined
import { SectionId } from "../../data/data";
import Section from "../Layout/Section";

const About: FC = memo(() => {
    const [aboutData, setAboutData] = useState<AboutInterface | null>(null);

    useEffect(() => {
        const fetchAboutData = async () => {
            try {
                const response = await client.queries.about({
                    relativePath: "about.md", // Ensure this matches your file path
                });
                const fetchedData = response.data; // Assuming this gives you the correct structure

                const aboutDataTransformed: AboutInterface = {
                    title: fetchedData.about.title,
                    profileImageSrc: fetchedData.about.profileImageSrc ?? undefined,
                    description: fetchedData.about.description ?? "",
                    aboutItems: fetchedData.about.aboutItems?.map((item: any) => ({
                        label: item.label,
                        text: item.text,
                        icon: item.icon ? React.createElement(iconMap[item.icon]) : undefined, // Dynamically create the React element
                    })) || [],
                };

                setAboutData(aboutDataTransformed);
            } catch (error) {
                console.error("Failed to fetch about data:", error);
            }
        };

        fetchAboutData();
    }, []);

    if (!aboutData) return <p>Loading...</p>;

    return (
        <Section className="bg-neutral-800" sectionId={SectionId.About}>
            <div className={classNames("grid grid-cols-1 md:grid-cols-4 gap-y-4")}>
                {aboutData.profileImageSrc && (
                    <div className="col-span-1 flex justify-center md:justify-start">
                        <div className="relative h-24 w-24 md:h-32 md:w-32 overflow-hidden rounded-xl">
                            {/* Ensure width and height are provided for Image component */}
                            <Image src={aboutData.profileImageSrc} alt="Profile" layout="fill" objectFit="cover" />
                        </div>
                    </div>
                )}
                <div className={`col-span-1 ${aboutData.profileImageSrc ? "md:col-span-3" : ""} flex flex-col gap-y-6`}>
                    <h2 className="text-2xl font-bold text-white">{aboutData.title}</h2>
                    <p className="prose prose-sm sm:prose-base text-gray-300">{aboutData.description}</p>
                    <ul className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                        {aboutData.aboutItems.map((item, idx) => (
                            <li key={idx} className="col-span-1 flex items-start gap-x-2">
                                {/* Icon handling omitted for brevity */}
                                <span className="text-sm font-bold text-white">{item.label}:</span>
                                <span className="text-sm text-gray-300">{item.text}</span>
                            </li>
                        ))}
                    </ul>
                </div>
            </div>
        </Section>
    );
});

export default About;


// Map icon names (or some identifiers) to their React components
const iconMap = {
    MapIcon: MapIcon,
    SparklesIcon: SparklesIcon,
    AcademicCapIcon: AcademicCapIcon,
    BuildingOffice2Icon: BuildingOffice2Icon,
    // Add more icons as needed
};


// THIS VERSOIN IS WORKING
-------------------------------------
import React, { FC, memo, useEffect, useState } from "react";
import client from "../../../tina/__generated__/client";
import { About as AboutInterface, AboutItem } from "../../data/dataDef";
import classNames from "classnames";
import Image from "next/image"; // Adjust the import path as necessary

import {SectionId } from "../../data/data";
import Section from "../Layout/Section";


const About: FC = memo(() => {
    const [aboutData, setAboutData] = useState<AboutInterface | null>(null);

    useEffect(() => {
        const fetchAboutData = async () => {
            try {
                const response = await client.queries.about({
                    relativePath: "about.md", // Ensure this matches your file path
                });
                const fetchedData = response.data; // Assuming this gives you the correct structure

                // Use non-null assertion operator for fields you're confident will exist
                const aboutDataTransformed: AboutInterface = {
                    title: fetchedData.about.title!,
                    profileImageSrc: fetchedData.about.profileImageSrc!,
                    description: fetchedData.about.description!,
                    aboutItems: fetchedData.about.aboutItems?.map((item: any) => ({
                        label: item.label,
                        text: item.text,
                        Icon: item.Icon,
                    })) || [],
                };

                setAboutData(aboutDataTransformed);
            } catch (error) {
                console.error("Failed to fetch about data:", error);
            }
        };
        fetchAboutData()
    }, []);

    if (!aboutData) return <p>Loading...</p>;

    return (

        <Section className="bg-neutral-800" sectionId={SectionId.About}>
            <div
                className={classNames("grid grid-cols-1 gap-y-4", {
                    "md:grid-cols-4": !!aboutData.profileImageSrc,
                })}
            >
                {!!aboutData.profileImageSrc && (
                    <div className="col-span-1 flex justify-center md:justify-start">
                        <div className="relative h-24 w-24 overflow-hidden rounded-xl md:h-32 md:w-32">
                            <Image
                                src={aboutData.profileImageSrc}
                                alt="Profile"
                                layout="fill"
                                objectFit="cover"
                            />
                        </div>
                    </div>
                )}
                <div
                    className={classNames("col-span-1 flex flex-col gap-y-6", {
                        "md:col-span-3": !!aboutData.profileImageSrc,
                    })}
                >
                    <div className="flex flex-col gap-y-2">
                        <h2 className="text-2xl font-bold text-white">Bertrand Ndobegang Atemkeng</h2>
                        <p className="prose prose-sm text-gray-300 sm:prose-base">
                            {aboutData.description}
                        </p>
                    </div>
                    <ul className="grid grid-cols-1 gap-4 sm:grid-cols-2">
                        {aboutData.aboutItems.map(({ label, text, Icon }, idx) => (
                            <li className="col-span-1 flex  items-start gap-x-2" key={idx}>
                                {Icon && <Icon className="h-5 w-5 text-white" />}
                                <span className="text-sm font-bold text-white">{label}:</span>
                                <span className=" text-sm text-gray-300">{text}</span>
                            </li>
                        ))}
                    </ul>
                </div>
            </div>
        </Section>
    );
});

export default About;




---------------------------------------------
V1 - useTina --> Almost there 12 :02 / Thuirs 28
import React, { FC, useEffect, useState } from "react";
import { useTina } from "tinacms/dist/react";
import client from "../../../tina/__generated__/client";
import { About as AboutInterface } from "../../data/dataDef";
import classNames from "classnames";
import Image from "next/image";
import { SectionId } from "../../data/data";
import Section from "../Layout/Section";
import {AboutQuery} from "../../../tina/__generated__/types"

const About: FC = () => {
    const [initialData, setAboutData] = useState<AboutInterface| null>(null);

    useEffect(() => {
        const fetchAboutData = async () => {
            try {
                const response = await client.queries.about({
                    relativePath: "about.md", // Ensure this matches your file path
                });
                const fetchedData = response.data; // Assuming this gives you the correct structure

                // Use non-null assertion operator for fields you're confident will exist
                const aboutDataTransformed: AboutInterface = {
                    title: fetchedData.about.title!,
                    profileImageSrc: fetchedData.about.profileImageSrc!,
                    description: fetchedData.about.description!,
                    aboutItems: fetchedData.about.aboutItems?.map((item: any) => ({
                        label: item.label,
                        text: item.text,
                        Icon: item.Icon,
                    })) || [],
                };

                setAboutData(aboutDataTransformed);
            } catch (error) {
                console.error("Failed to fetch about data:", error);
            }
        };
        fetchAboutData()
    }, []);

    const tinaProps = {
        query: `{
      about(relativePath: "about.md") {
        title
        profileImageSrc
        description
        aboutItems {
          label
          text
          icon
        }
      }
    }`,
        variables: {}, // Any variables for your query if needed
        data: initialData,
    };

    const { data } = useTina(tinaProps);

    // Handle loading state
    if (!data) return <p>Loading...</p>;

    // Render your component with the fetched data
    return (
        <Section className="bg-neutral-800" sectionId={SectionId.About}>
            {/* ... your existing component code using aboutData ... */}
        </Section>
    );
};

export default About;


